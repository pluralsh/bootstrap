apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  acme:
    email: {{ .Values.ownerEmail }}
    server: {{ .Values.letsencryptServer }}
    privateKeySecretRef:
      name: letsencryt-prod-key
    solvers:
    - http01:
        ingress:
          ingressClassName: nginx
{{ if and .Values.acmeEAB.kid .Values.dnsSolver }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: plural
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  acme:
    # You must replace this email address with your own.
    # Let's Encrypt will use this to contact you about expiring
    # certificates, and issues related to your account.
    email: {{ .Values.ownerEmail }}
    server: {{ .Values.acmeServer }}
    {{ if .Values.acmeEAB.kid }}
    externalAccountBinding:
      keyID: {{ .Values.acmeEAB.kid }}
      keySecretRef:
        name: acme-eab-secret
        key: eab-secret
      keyAlgorithm: HS256
    {{ end }}
    privateKeySecretRef:
      # Secret resource that will be used to store the account's private key.
      name: cert-manager-key
    # Add a single challenge solver, dns01, configured using the appropriate cloud dns setup
    solvers:
    - dns01:
      {{ .Values.dnsSolver | toYaml | nindent 8 }}
{{ end }}