fullnameOverride: monitoring 

defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8sContainerCpuUsageSecondsTotal: true
    k8sContainerMemoryCache: true
    k8sContainerMemoryRss: true
    k8sContainerMemorySwap: true
    k8sContainerResource: true
    k8sContainerMemoryWorkingSetBytes: true
    k8sPodOwner: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverHistogram: true
    kubeApiserverSlos: true
    kubeControllerManager: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeSchedulerAlerting: true
    kubeSchedulerRecording: true
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true
    windows: true


alertmanager:
  enabled: true
  fullnameOverride: kps-alertmanager


prometheusOperator:
  tls:
    enabled: false
  admissionWebhooks:
    enabled: false
  prometheusConfigReloader:
    resources:
      requests:
        cpu: 200m
        memory: 50Mi
      limits:
        memory: 100Mi
additionalScrapeConfigs:
  - job_name: opencost
    honor_labels: true
    scrape_interval: 1m
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    dns_sd_configs:
    - names:
      - opencost.monitoring
      type: 'A'
      port: 9003

grafana:
  enabled: false

prometheus:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: basic-auth-prom
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    hosts:
      - {{ context.prometheusHost }}
    tls:
      - secretName: prometheus-tls
        hosts:
          - {{ context.prometheusHost }}
    servicePort: 9090
    pathType: Prefix
    paths:
      - /
      - /.*
  prometheusSpec:
    enableFeatures:
      enableFeatures: -remote-write-receiver
    enableRemoteWriteReceiver: true
    remoteWriteDashboards:
      enabled: true

# monitored k8s components
kubeApiServer:
  enabled: true

kubelet:
  enabled: true

coreDns:
  enabled: true

# already monitored with coreDns
kubeDns:
  enabled: false

kubeProxy:
  enabled: true

kubeStateMetrics:
  enabled: true

kube-state-metrics:
  fullnameOverride: kps-kube-state-metrics
  selfMonitor:
    enabled: true

nodeExporter:
  enabled: true

prometheus-node-exporter:
  fullnameOverride: kps-node-exporter
  prometheus:
    monitor:
      enabled: true
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 2048Mi

# EKS hides metrics for controller manager, scheduler, and etcd
# https://github.com/aws/eks-anywhere/issues/4405
# disable kube controller manager scraping
kubeControllerManager:
  enabled: false

# disable kube scheduler scraping
kubeScheduler:
  enabled: false

kubeEtcd:
  enabled: false


